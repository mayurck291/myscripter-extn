// Generated by CoffeeScript 1.3.3
(function() {
  var Alert, AlertBox, MonkeyWrench,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MonkeyWrench = angular.module('MonkeyWrench');

  Alert = (function() {

    Alert.$inject = ["$timeout"];

    function Alert(timeout) {
      this.timeout = timeout;
      this.warning = __bind(this.warning, this);

      this.error = __bind(this.error, this);

      this.success = __bind(this.success, this);

      this.hide = __bind(this.hide, this);

      this.bind = __bind(this.bind, this);

      this.classError = "alert alert-danger";
      this.classSuccess = "alert alert-success";
      this.classWarning = "alert alert-warning";
      this.alert = {
        msg: null,
        "class": null,
        show: false
      };
      return;
    }

    Alert.prototype.helper = function(msgType, msg, time) {
      this.alert.msg = msg;
      this.alert.show = true;
      switch (msgType) {
        case "success":
          this.alert["class"] = this.classSuccess;
          this.alert.type = msgType;
          break;
        case "error":
          this.alert["class"] = this.classError;
          this.alert.type = msgType;
          break;
        case "warning":
          this.alert["class"] = this.classWarning;
          this.alert.type = msgType;
          break;
        default:
          this.alert["class"] = "";
          this.alert.msg = "";
          this.alert.show = false;
      }
      if (this.timeout.cancel(this.promise)) {
        this.promise = this.timeout(this.hide, time);
      } else {
        this.promise = this.timeout(this.hide, time);
      }
    };

    Alert.prototype.bind = function() {
      return this.alert;
    };

    Alert.prototype.hide = function() {
      return this.helper(null, null, null);
    };

    Alert.prototype.success = function(msg) {
      return this.helper("success", msg, 2500);
    };

    Alert.prototype.error = function(msg) {
      return this.helper("error", msg, 3500);
    };

    Alert.prototype.warning = function(msg) {
      return this.helper("warning", msg, 2500);
    };

    return Alert;

  })();

  MonkeyWrench.service("Alert", ["$timeout", Alert]);

  AlertBox = (function() {

    AlertBox.$inject = ["Alert"];

    function AlertBox(Alert) {
      this.Alert = Alert;
      return this;
    }

    AlertBox.prototype.restrict = "E";

    AlertBox.prototype.transclude = true;

    AlertBox.prototype.template = "<div data-ng-transclude></div>";

    AlertBox.prototype.controller = [
      "$scope", "Alert", function($scope, Alert) {
        return $scope.alert = Alert.bind();
      }
    ];

    return AlertBox;

  })();

  MonkeyWrench.directive("alert", ["Alert", AlertBox]);

}).call(this);
