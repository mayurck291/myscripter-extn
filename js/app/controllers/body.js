// Generated by CoffeeScript 1.7.1
var BodyController, MonkeyWrench,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

MonkeyWrench = angular.module('MonkeyWrench');

BodyController = (function() {
  BodyController.$inject = ['$scope', '$routeParams', '$timeout', '$location', 'Baazar', 'GPauth', 'Alert', 'Project'];

  function BodyController(scope, routeParams, timeout, location, Baazar, gp, Alert, Project) {
    this.scope = scope;
    this.routeParams = routeParams;
    this.timeout = timeout;
    this.location = location;
    this.Baazar = Baazar;
    this.gp = gp;
    this.Alert = Alert;
    this.Project = Project;
    this.help = __bind(this.help, this);
    this.baazar = __bind(this.baazar, this);
    this["new"] = __bind(this["new"], this);
    this.home = __bind(this.home, this);
    this.signOut = __bind(this.signOut, this);
    this.signIn = __bind(this.signIn, this);
    this.deleteUserInfo = __bind(this.deleteUserInfo, this);
    this.getUserInfo = __bind(this.getUserInfo, this);
    this.scope.alert = this.Alert.bind();
    this.scope.signIn = this.signIn;
    this.scope.signOut = this.signOut;
    this.gp.load().then((function(_this) {
      return function() {
        return _this.getUserInfo();
      };
    })(this), (function(_this) {
      return function() {
        _this.scope.user = null;
        _this.scope.signedIn = false;
        return console.log("User not signed in");
      };
    })(this));
    this.scope.home = this.home;
    this.scope["new"] = this["new"];
    this.scope.baazar = this.baazar;
    this.scope.help = this.help;
    this.scope.$on('$routeChangeStart', (function(_this) {
      return function(next, current) {
        return _this.scope.showLoader = true;
      };
    })(this));
    this.scope.$on('$routeChangeSuccess', (function(_this) {
      return function(next, current) {
        return _this.scope.showLoader = false;
      };
    })(this));
    this.scope.$on('$routeChangeError', (function(_this) {
      return function(next, current) {
        return _this.scope.showLoader = false;
      };
    })(this));
    return;
  }

  BodyController.prototype.getUserInfo = function() {
    return this.gp.getUserInfo().then((function(_this) {
      return function(user) {
        _this.scope.user = user;
        _this.scope.signedIn = true;
        return _this.scope.$broadcast('login');
      };
    })(this), (function(_this) {
      return function() {
        return _this.gp.signOut();
      };
    })(this));
  };

  BodyController.prototype.deleteUserInfo = function() {
    this.scope.user = null;
    return this.scope.signedIn = false;
  };

  BodyController.prototype.signIn = function() {
    this.Alert.warning("Loading...........:)");
    this.gp.signIn().then((function(_this) {
      return function() {
        return _this.getUserInfo();
      };
    })(this), (function(_this) {
      return function(error) {
        return console.log(error);
      };
    })(this));
  };

  BodyController.prototype.signOut = function() {
    console.log("signing out.....");
    this.gp.signOut().then((function(_this) {
      return function() {
        return console.log("out");
      };
    })(this), (function(_this) {
      return function() {
        return console.log("not out");
      };
    })(this));
    this.scope.user = null;
    this.scope.signedIn = false;
    this.scope.$broadcast('logout');
  };

  BodyController.prototype.home = function() {
    document.getElementsByTagName('body')[0].click();
    return this.timeout((function(_this) {
      return function() {
        return _this.location.path('/');
      };
    })(this), 1, true);
  };

  BodyController.prototype["new"] = function() {
    document.getElementsByTagName('body')[0].click();
    return this.timeout((function(_this) {
      return function() {
        return _this.location.path('/New');
      };
    })(this), 1, true);
  };

  BodyController.prototype.baazar = function() {
    document.getElementsByTagName('body')[0].click();
    return this.timeout((function(_this) {
      return function() {
        return _this.location.path('/Baazar');
      };
    })(this), 1, true);
  };

  BodyController.prototype.help = function() {
    document.getElementsByTagName('body')[0].click();
    return this.timeout((function(_this) {
      return function() {
        return _this.location.path('/Help');
      };
    })(this), 1, true);
  };

  return BodyController;

})();

MonkeyWrench.controller('BodyController', BodyController);
