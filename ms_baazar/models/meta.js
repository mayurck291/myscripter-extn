// Generated by CoffeeScript 1.3.3
(function() {
  var Meta, Schema, logger, metaSchema, mongoose;

  mongoose = require('mongoose');

  logger = require('../utils/logger');

  Schema = mongoose.Schema;

  metaSchema = new Schema({
    _id: {
      type: Schema.Types.ObjectId,
      ref: 'recipe'
    },
    users: {
      type: [
        {
          type: String,
          ref: 'user'
        }
      ],
      "default": []
    },
    favs: {
      type: [
        {
          type: String,
          ref: 'user'
        }
      ],
      "default": []
    },
    forks: {
      type: Number,
      "default": 0
    },
    karma: {
      type: [
        {
          user: {
            type: String,
            ref: 'user',
            index: false
          },
          karma: {
            type: Number,
            "default": 1
          },
          _id: false,
          id: false
        }
      ],
      "default": []
    }
  }, {
    id: false
  });

  metaSchema.set('toJSON', {
    virtuals: true
  });

  metaSchema.virtual('favc').get(function() {
    return this.favs.length;
  });

  metaSchema.virtual('userc').get(function() {
    return this.users.length;
  });

  metaSchema.virtual('karmac').get(function() {
    var i, k, karmac, _i, _len, _ref;
    karmac = 0;
    _ref = this.karma;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      k = _ref[i];
      karmac += k.karma;
    }
    return Math.ceil(karmac / i);
  });

  Meta = mongoose.model('meta', metaSchema);

  module.exports = Meta;

}).call(this);
